/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WorksRouteImport } from './routes/works'
import { Route as StackRouteImport } from './routes/stack'
import { Route as ShelfRouteImport } from './routes/shelf'
import { Route as ProductsRouteImport } from './routes/products'
import { Route as LinksRouteImport } from './routes/links'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogIndexRouteImport } from './routes/blog/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as BlogPostIdRouteImport } from './routes/blog/$postId'
import { Route as AdminWorksRouteImport } from './routes/admin/works'
import { Route as AdminProductsRouteImport } from './routes/admin/products'
import { Route as AdminNewsletterSubsRouteImport } from './routes/admin/newsletter-subs'
import { Route as AdminImagesRouteImport } from './routes/admin/images'
import { Route as AdminBlogIndexRouteImport } from './routes/admin/blog/index'
import { Route as AdminBlogCreatePostRouteImport } from './routes/admin/blog/create-post'
import { Route as AdminBlogPreviewPostPostIdRouteImport } from './routes/admin/blog/preview-post/$postId'
import { Route as AdminBlogEditPostPostIdRouteImport } from './routes/admin/blog/edit-post/$postId'

const WorksRoute = WorksRouteImport.update({
  id: '/works',
  path: '/works',
  getParentRoute: () => rootRouteImport,
} as any)
const StackRoute = StackRouteImport.update({
  id: '/stack',
  path: '/stack',
  getParentRoute: () => rootRouteImport,
} as any)
const ShelfRoute = ShelfRouteImport.update({
  id: '/shelf',
  path: '/shelf',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsRoute = ProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRouteImport,
} as any)
const LinksRoute = LinksRouteImport.update({
  id: '/links',
  path: '/links',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogPostIdRoute = BlogPostIdRouteImport.update({
  id: '/blog/$postId',
  path: '/blog/$postId',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminWorksRoute = AdminWorksRouteImport.update({
  id: '/admin/works',
  path: '/admin/works',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminProductsRoute = AdminProductsRouteImport.update({
  id: '/admin/products',
  path: '/admin/products',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminNewsletterSubsRoute = AdminNewsletterSubsRouteImport.update({
  id: '/admin/newsletter-subs',
  path: '/admin/newsletter-subs',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminImagesRoute = AdminImagesRouteImport.update({
  id: '/admin/images',
  path: '/admin/images',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminBlogIndexRoute = AdminBlogIndexRouteImport.update({
  id: '/admin/blog/',
  path: '/admin/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminBlogCreatePostRoute = AdminBlogCreatePostRouteImport.update({
  id: '/admin/blog/create-post',
  path: '/admin/blog/create-post',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminBlogPreviewPostPostIdRoute =
  AdminBlogPreviewPostPostIdRouteImport.update({
    id: '/admin/blog/preview-post/$postId',
    path: '/admin/blog/preview-post/$postId',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminBlogEditPostPostIdRoute = AdminBlogEditPostPostIdRouteImport.update({
  id: '/admin/blog/edit-post/$postId',
  path: '/admin/blog/edit-post/$postId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/links': typeof LinksRoute
  '/products': typeof ProductsRoute
  '/shelf': typeof ShelfRoute
  '/stack': typeof StackRoute
  '/works': typeof WorksRoute
  '/admin/images': typeof AdminImagesRoute
  '/admin/newsletter-subs': typeof AdminNewsletterSubsRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/works': typeof AdminWorksRoute
  '/blog/$postId': typeof BlogPostIdRoute
  '/admin': typeof AdminIndexRoute
  '/blog': typeof BlogIndexRoute
  '/admin/blog/create-post': typeof AdminBlogCreatePostRoute
  '/admin/blog': typeof AdminBlogIndexRoute
  '/admin/blog/edit-post/$postId': typeof AdminBlogEditPostPostIdRoute
  '/admin/blog/preview-post/$postId': typeof AdminBlogPreviewPostPostIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/links': typeof LinksRoute
  '/products': typeof ProductsRoute
  '/shelf': typeof ShelfRoute
  '/stack': typeof StackRoute
  '/works': typeof WorksRoute
  '/admin/images': typeof AdminImagesRoute
  '/admin/newsletter-subs': typeof AdminNewsletterSubsRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/works': typeof AdminWorksRoute
  '/blog/$postId': typeof BlogPostIdRoute
  '/admin': typeof AdminIndexRoute
  '/blog': typeof BlogIndexRoute
  '/admin/blog/create-post': typeof AdminBlogCreatePostRoute
  '/admin/blog': typeof AdminBlogIndexRoute
  '/admin/blog/edit-post/$postId': typeof AdminBlogEditPostPostIdRoute
  '/admin/blog/preview-post/$postId': typeof AdminBlogPreviewPostPostIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/links': typeof LinksRoute
  '/products': typeof ProductsRoute
  '/shelf': typeof ShelfRoute
  '/stack': typeof StackRoute
  '/works': typeof WorksRoute
  '/admin/images': typeof AdminImagesRoute
  '/admin/newsletter-subs': typeof AdminNewsletterSubsRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/works': typeof AdminWorksRoute
  '/blog/$postId': typeof BlogPostIdRoute
  '/admin/': typeof AdminIndexRoute
  '/blog/': typeof BlogIndexRoute
  '/admin/blog/create-post': typeof AdminBlogCreatePostRoute
  '/admin/blog/': typeof AdminBlogIndexRoute
  '/admin/blog/edit-post/$postId': typeof AdminBlogEditPostPostIdRoute
  '/admin/blog/preview-post/$postId': typeof AdminBlogPreviewPostPostIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/links'
    | '/products'
    | '/shelf'
    | '/stack'
    | '/works'
    | '/admin/images'
    | '/admin/newsletter-subs'
    | '/admin/products'
    | '/admin/works'
    | '/blog/$postId'
    | '/admin'
    | '/blog'
    | '/admin/blog/create-post'
    | '/admin/blog'
    | '/admin/blog/edit-post/$postId'
    | '/admin/blog/preview-post/$postId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/links'
    | '/products'
    | '/shelf'
    | '/stack'
    | '/works'
    | '/admin/images'
    | '/admin/newsletter-subs'
    | '/admin/products'
    | '/admin/works'
    | '/blog/$postId'
    | '/admin'
    | '/blog'
    | '/admin/blog/create-post'
    | '/admin/blog'
    | '/admin/blog/edit-post/$postId'
    | '/admin/blog/preview-post/$postId'
  id:
    | '__root__'
    | '/'
    | '/links'
    | '/products'
    | '/shelf'
    | '/stack'
    | '/works'
    | '/admin/images'
    | '/admin/newsletter-subs'
    | '/admin/products'
    | '/admin/works'
    | '/blog/$postId'
    | '/admin/'
    | '/blog/'
    | '/admin/blog/create-post'
    | '/admin/blog/'
    | '/admin/blog/edit-post/$postId'
    | '/admin/blog/preview-post/$postId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LinksRoute: typeof LinksRoute
  ProductsRoute: typeof ProductsRoute
  ShelfRoute: typeof ShelfRoute
  StackRoute: typeof StackRoute
  WorksRoute: typeof WorksRoute
  AdminImagesRoute: typeof AdminImagesRoute
  AdminNewsletterSubsRoute: typeof AdminNewsletterSubsRoute
  AdminProductsRoute: typeof AdminProductsRoute
  AdminWorksRoute: typeof AdminWorksRoute
  BlogPostIdRoute: typeof BlogPostIdRoute
  AdminIndexRoute: typeof AdminIndexRoute
  BlogIndexRoute: typeof BlogIndexRoute
  AdminBlogCreatePostRoute: typeof AdminBlogCreatePostRoute
  AdminBlogIndexRoute: typeof AdminBlogIndexRoute
  AdminBlogEditPostPostIdRoute: typeof AdminBlogEditPostPostIdRoute
  AdminBlogPreviewPostPostIdRoute: typeof AdminBlogPreviewPostPostIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/works': {
      id: '/works'
      path: '/works'
      fullPath: '/works'
      preLoaderRoute: typeof WorksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stack': {
      id: '/stack'
      path: '/stack'
      fullPath: '/stack'
      preLoaderRoute: typeof StackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shelf': {
      id: '/shelf'
      path: '/shelf'
      fullPath: '/shelf'
      preLoaderRoute: typeof ShelfRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/links': {
      id: '/links'
      path: '/links'
      fullPath: '/links'
      preLoaderRoute: typeof LinksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/$postId': {
      id: '/blog/$postId'
      path: '/blog/$postId'
      fullPath: '/blog/$postId'
      preLoaderRoute: typeof BlogPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/works': {
      id: '/admin/works'
      path: '/admin/works'
      fullPath: '/admin/works'
      preLoaderRoute: typeof AdminWorksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/products': {
      id: '/admin/products'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/newsletter-subs': {
      id: '/admin/newsletter-subs'
      path: '/admin/newsletter-subs'
      fullPath: '/admin/newsletter-subs'
      preLoaderRoute: typeof AdminNewsletterSubsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/images': {
      id: '/admin/images'
      path: '/admin/images'
      fullPath: '/admin/images'
      preLoaderRoute: typeof AdminImagesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/blog/': {
      id: '/admin/blog/'
      path: '/admin/blog'
      fullPath: '/admin/blog'
      preLoaderRoute: typeof AdminBlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/blog/create-post': {
      id: '/admin/blog/create-post'
      path: '/admin/blog/create-post'
      fullPath: '/admin/blog/create-post'
      preLoaderRoute: typeof AdminBlogCreatePostRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/blog/preview-post/$postId': {
      id: '/admin/blog/preview-post/$postId'
      path: '/admin/blog/preview-post/$postId'
      fullPath: '/admin/blog/preview-post/$postId'
      preLoaderRoute: typeof AdminBlogPreviewPostPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/blog/edit-post/$postId': {
      id: '/admin/blog/edit-post/$postId'
      path: '/admin/blog/edit-post/$postId'
      fullPath: '/admin/blog/edit-post/$postId'
      preLoaderRoute: typeof AdminBlogEditPostPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LinksRoute: LinksRoute,
  ProductsRoute: ProductsRoute,
  ShelfRoute: ShelfRoute,
  StackRoute: StackRoute,
  WorksRoute: WorksRoute,
  AdminImagesRoute: AdminImagesRoute,
  AdminNewsletterSubsRoute: AdminNewsletterSubsRoute,
  AdminProductsRoute: AdminProductsRoute,
  AdminWorksRoute: AdminWorksRoute,
  BlogPostIdRoute: BlogPostIdRoute,
  AdminIndexRoute: AdminIndexRoute,
  BlogIndexRoute: BlogIndexRoute,
  AdminBlogCreatePostRoute: AdminBlogCreatePostRoute,
  AdminBlogIndexRoute: AdminBlogIndexRoute,
  AdminBlogEditPostPostIdRoute: AdminBlogEditPostPostIdRoute,
  AdminBlogPreviewPostPostIdRoute: AdminBlogPreviewPostPostIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
